#search inside files by pattern recursivelly:
grep -rnw '/path/to/somewhere/' -e 'pattern'
# -r or -R is recursive,
# -n is line number, and
# -w stands for match the whole word.
# -l (lower-case L) can be added to just give the file name of matching files.
# -e is the pattern used during the search
# Along with these, --exclude, --include, --exclude-dir flags could be used for efficient searching:
# This will only search through those files which have .c or .h extensions:
# grep --include=\*.{c,h} -rnw '/path/to/somewhere/' -e "pattern"
# This will exclude searching all the files ending with .o extension:
# grep --exclude=\*.o -rnw '/path/to/somewhere/' -e "pattern"
# For directories it's possible to exclude one or more directories using the --exclude-dir parameter. For example, this will exclude the dirs dir1/, dir2/ and all of them matching *.dst/:
# grep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/search/' -e "pattern"

locate (for locate for index command "updatedb")

find -name FILE
-mtime -3
-user jane
-sime +1M 

whereis - location in $PATH

#to secure delete file we can user "shred" command, which designed to shred individual files, not directories. If we want to securely delete all files within a directory, we can use the combination of the `find` and `shred` commands. This command will find all files within the specified directory and its subdirectories, and shred each file individually.
shred <filename>

#command to inspect the user:
finder <username>

#to show only head of file
head <filename>
less <filename>

#to compare:
cmp <file1> <file2>

#to show difference:
diff <file1> <file2>

find / -name "some_name"


#NETWORK:
#route to resource:
traceroute google.com
#ports opened:
netstat -tulpn
ss -tulpn
#firewall:
iptables
ufw allow 80
ufw status

#instead of uname we can use neofetch:
sudo apt install netfetch
netfetch

#calendar:
cal

#calculator:
echo "4+5+6+7" | bc

#to kill process:
kill -9 <PID>
#kill by name:
pkill -f <process_name>